{"version":3,"sources":["components/Expenses/ExpenseDate.js","components/UI/Card.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpenseFilter.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["ExpenseDate","props","month","date","toLocaleString","year","getFullYear","day","className","Card","classes","children","ExpenseItem","title","amount","ExpensesFilter","value","selected","onChange","event","onChangeFilter","target","Expenses","useState","filteredYear","setFilteredYear","selectedYear","expenses","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","max","NewExpense","enteredExpenseData","id","Math","random","toString","onAddExpense","App","expense","console","log","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.fd8cf2d6.chunk.js","sourcesContent":["import './ExpenseDate.css';\n\nexport default function ExpenseDate(props) {\n\n    const month = props.date.toLocaleString('en-US', {month:'long'});\n    const year = props.date.getFullYear();\n    const day = props.date.toLocaleString('en-US', {day:'2-digit'});\n\n    return (\n        <div className=\"expense-date\">\n            <div className=\"expense-date__month\">{month}</div>\n            <div className=\"expense-date__year\">{year}</div>\n            <div className=\"expense-date__day\">{day}</div>\n        </div>\n    );\n}","import './Card.css';\n\nexport default function Card(props) {\n\n    const classes = 'card ' + props.className;\n\n    return (\n        <div className={classes}>{props.children}</div>\n    );\n}","import React from 'react';\nimport ExpenseDate from './ExpenseDate';\nimport './ExpenseItem.css';\nimport Card from '../UI/Card';\n\nexport default function ExpenseItem(props) {\n    \n\n    return (\n        <Card className='expense-item'>\n            <ExpenseDate date={props.date} />\n            <div className='expense-item__description'>\n                <h2>{props.title}</h2>\n                <div className='expense-item__price'>${props.amount}</div>\n            </div>\n        </Card>\n\n    );\n}","import React from 'react';\n\nimport './ExpenseFilter.css';\n\nconst ExpensesFilter = (props) => {\n\n    function dropdownChangeHandler(event) {\n        props.onChangeFilter(event.target.value);\n    }\n\n  return (\n    <div className='expenses-filter'>\n      <div className='expenses-filter__control'>\n        <label>Filter by year</label>\n        <select value={props.selected} onChange={dropdownChangeHandler}>\n          <option value='2022'>2022</option>\n          <option value='2021'>2021</option>\n          <option value='2020'>2020</option>\n          <option value='2019'>2019</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpensesFilter;","import React, {useState} from \"react\";\nimport \"./Expenses.css\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport Card from \"../UI/Card\";\nimport ExpenseFilter from './ExpenseFilter';\n\nexport default function Expenses(props) {\n\n  const [filteredYear, setFilteredYear] = useState('2020');\n\n  function filterChangeHandler(selectedYear) {\n    setFilteredYear(selectedYear);\n  }\n\n    return(\n      <div>\n        \n      \n    <Card className=\"expenses\">\n    <ExpenseFilter selected={filteredYear} onChangeFilter={filterChangeHandler}/>\n    <ExpenseItem\n        title={props.expenses[0].title}\n        amount={props.expenses[0].amount}\n        date={props.expenses[0].date}\n      ></ExpenseItem>\n      <ExpenseItem\n        title={props.expenses[1].title}\n        amount={props.expenses[1].amount}\n        date={props.expenses[1].date}\n      ></ExpenseItem>\n      <ExpenseItem\n        title={props.expenses[2].title}\n        amount={props.expenses[2].amount}\n        date={props.expenses[2].date}\n      ></ExpenseItem>\n      <ExpenseItem\n        title={props.expenses[3].title}\n        amount={props.expenses[3].amount}\n        date={props.expenses[3].date}\n      ></ExpenseItem>\n      </Card>\n      </div>\n    );\n}","import React, {useState} from \"react\";\nimport './ExpenseForm.css';\n\nexport default function ExpenseForm(props) {\n\n    // const [userInput, setUserInput] = useState({\n    //     enteredTitle: '',\n    //     enteredAmount: '',\n    //     enteredDate: '',\n    // });\n\n    // function titleChangeHandler (event) {\n    //     setUserInput(\n    //         {...userInput, enteredTitle:event.target.value}\n    //     );\n    // }\n\n    // function amountChangeHandler (event) {\n    //     setUserInput(\n    //         {...userInput, enteredAmount:event.target.value}\n    //     );\n    // }\n\n    // function dateChangeHandler (event) {\n    //     setUserInput(\n    //         {...userInput, enteredDate:event.target.value}\n    //     );\n    // }\n\n  const [enteredTitle, setEnteredTitle] = useState('');\n  const [enteredAmount, setEnteredAmount] = useState('');\n  const [enteredDate, setEnteredDate] = useState('');\n  // const [userInput, setUserInput] = useState({\n  //   enteredTitle: '',\n  //   enteredAmount: '',\n  //   enteredDate: '',\n  // });\n\n  const titleChangeHandler = (event) => {\n    setEnteredTitle(event.target.value);\n    // setUserInput({\n    //   ...userInput,\n    //   enteredTitle: event.target.value,\n    // });\n    // setUserInput((prevState) => {\n    //   return { ...prevState, enteredTitle: event.target.value };\n    // });\n  };\n\n  const amountChangeHandler = (event) => {\n    setEnteredAmount(event.target.value);\n    // setUserInput({\n    //   ...userInput,\n    //   enteredAmount: event.target.value,\n    // });\n  };\n\n  const dateChangeHandler = (event) => {\n    setEnteredDate(event.target.value);\n    // setUserInput({\n    //   ...userInput,\n    //   enteredDate: event.target.value,\n    // });\n  };\n\n  function submitHandler(event) {\n    event.preventDefault();\n\n    const expenseData = {\n        title: enteredTitle,\n        amount: enteredAmount,\n        date: new Date(enteredDate),\n    }\n\n    // console.log(expenseData);\n    props.onSaveExpenseData(expenseData);\n    setEnteredTitle('');\n    setEnteredAmount('');\n    setEnteredDate('');\n  }\n\n\n\n    return (\n        <form onSubmit={submitHandler}>\n            <div className='new-expense__controls'>\n                <div className=\"new-expense__control\">\n                    <label>Title</label>\n                    <input type=\"text\" value={enteredTitle} onChange={titleChangeHandler}/>\n                </div>\n                <div className=\"new-expense__control\">\n                    <label>Amount</label>\n                    <input type=\"number\" min=\"0.1\" step=\"0.1\" value={enteredAmount} onChange={amountChangeHandler}/>\n                </div>\n                <div className=\"new-expense__control\">\n                    <label>Date</label>\n                    <input type=\"date\" min=\"2019-01-01\" max=\"2022-12-31\" value={enteredDate} onChange={dateChangeHandler}/>\n                </div>\n            </div>\n            <div className=\"new-expense__actions\">\n                <button type=\"submit\">Add Expense</button>\n            </div>\n        </form>\n    );\n}","import React from \"react\";\nimport './NewExpense.css';\nimport ExpenseForm from \"./ExpenseForm\";\n\nexport default function NewExpense(props) {\n\n    function saveExpenseDataHandler (enteredExpenseData) {\n        const expenseData = {\n            ...enteredExpenseData,\n            id: Math.random.toString(),\n        };\n\n        props.onAddExpense(expenseData);\n    }\n\n    return (\n        <div className = 'new-expense'>\n            <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} />\n        </div>\n    );\n}","\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nfunction App() {\n\n  const expenses = [\n    {\n      id: 'e1',\n      title: 'Toilet Paper',\n      amount: 94.12,\n      date: new Date(2020, 7, 14),\n    },\n    { id: 'e2', title: 'New TV', amount: 799.49, date: new Date(2021, 2, 12) },\n    {\n      id: 'e3',\n      title: 'Car Insurance',\n      amount: 294.67,\n      date: new Date(2021, 2, 28),\n    },\n    {\n      id: 'e4',\n      title: 'New Desk (Wooden)',\n      amount: 450,\n      date: new Date(2021, 5, 12),\n    },\n  ];\n\n  function addExpenseHandler(expense) {\n    console.log(expense);\n  } \n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler}/>\n      <Expenses expenses={expenses}/>\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}