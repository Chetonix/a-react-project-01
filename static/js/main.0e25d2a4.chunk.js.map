{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpenseFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","value","selected","onChange","event","onChangeFilter","target","ExpenseDate","month","date","toLocaleString","year","getFullYear","day","ExpenseItem","title","amount","ExpenseList","expenses","length","map","expense","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","getMonth","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","filter","toString","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","random","onAddExpense","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.0e25d2a4.chunk.js","sourcesContent":["import './Card.css';\n\nexport default function Card(props) {\n\n    const classes = 'card ' + props.className;\n\n    return (\n        <div className={classes}>{props.children}</div>\n    );\n}","import React from 'react';\n\nimport './ExpenseFilter.css';\n\nconst ExpensesFilter = (props) => {\n\n    function dropdownChangeHandler(event) {\n        props.onChangeFilter(event.target.value);\n    }\n\n  return (\n    <div className='expenses-filter'>\n      <div className='expenses-filter__control'>\n        <label>Filter by year</label>\n        <select value={props.selected} onChange={dropdownChangeHandler}>\n          <option value='2022'>2022</option>\n          <option value='2021'>2021</option>\n          <option value='2020'>2020</option>\n          <option value='2019'>2019</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpensesFilter;","import './ExpenseDate.css';\n\nexport default function ExpenseDate(props) {\n\n    const month = props.date.toLocaleString('en-US', {month:'long'});\n    const year = props.date.getFullYear();\n    const day = props.date.toLocaleString('en-US', {day:'2-digit'});\n\n    return (\n        <div className=\"expense-date\">\n            <div className=\"expense-date__month\">{month}</div>\n            <div className=\"expense-date__year\">{year}</div>\n            <div className=\"expense-date__day\">{day}</div>\n        </div>\n    );\n}","import React from 'react';\nimport ExpenseDate from './ExpenseDate';\nimport './ExpenseItem.css';\nimport Card from '../UI/Card';\n\nexport default function ExpenseItem(props) {\n    \n\n    return (\n        <li>\n        <Card className='expense-item'>\n            <ExpenseDate date={props.date} />\n            <div className='expense-item__description'>\n                <h2>{props.title}</h2>\n                <div className='expense-item__price'>${props.amount}</div>\n            </div>\n        </Card>\n        </li>\n    );\n}","import React from \"react\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport './ExpensesList.css';\n\nexport default function ExpenseList (props) {\n\n    if(props.expenses.length === 0) {\n        return <h2 className=\"expenses-list__fallback\">No Expenses Found.</h2>\n  }\n\n  return (\n    <ul className=\"expenses-list\">\n        {props.expenses.map(expense=> {\n      return <ExpenseItem key={expense.id} title={expense.title} amount={expense.amount} date={expense.date} />\n    })}\n    </ul>\n  )\n\n\n}","import './ChartBar.css';\nimport React from 'react';\n\nexport default function ChartBar (props) {\n\n    let barFillHeight = '0%';\n\n    if(props.maxValue > 0) {\n        barFillHeight = Math.round((props.value/props.maxValue) * 100) + '%';\n\n    }\n\n    return (\n        <div className='chart-bar'>\n            <div className='chart-bar__inner'>\n                <div className='chart-bar__fill' style={{height: barFillHeight}}></div>\n            </div>\n            <div className='chart-bar__label'>{props.label}</div>\n        </div>\n    )\n}\n","import './Chart.css';\nimport React from 'react';\nimport ChartBar from './ChartBar';\n\nexport default function Chart(props) {\n\n    const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\n    const totalMaximum = Math.max(...dataPointValues);\n\n    return (\n        <div className='chart'>\n            {props.dataPoints.map(dataPoint => {\n                return <ChartBar key={dataPoint.label} value={dataPoint.value} maxValue={totalMaximum} label={dataPoint.label}/>\n            })}\n        </div>\n    )\n}","import React from \"react\";\nimport Chart from \"../Chart/Chart\";\n\nexport default function ExpensesChart (props) {\n\n    const chartDataPoints = [\n        {label: 'Jan', value : 0},\n        {label: 'Feb', value : 0},\n        {label: 'Mar', value : 0},\n        {label: 'Apr', value : 0},\n        {label: 'May', value : 0},\n        {label: 'Jun', value : 0},\n        {label: 'Jul', value : 0},\n        {label: 'Aug', value : 0},\n        {label: 'Sep', value : 0},\n        {label: 'Oct', value : 0},\n        {label: 'Nov', value : 0},\n        {label: 'Dec', value : 0}\n    ];\n\n    for (const expense of props.expenses) {\n        const expenseMonth = expense.date.getMonth();  //starts at 0\n        chartDataPoints[expenseMonth].value += expense.amount;\n    }\n\n    return <Chart dataPoints={chartDataPoints}/>\n}","import React, {useState} from \"react\";\nimport \"./Expenses.css\";\n// import ExpenseItem from \"./ExpenseItem\";\nimport Card from \"../UI/Card\";\nimport ExpenseFilter from './ExpenseFilter';\nimport ExpenseList from \"./ExpensesList\";\nimport ExpensesChart from \"./ExpensesChart\";\n\nexport default function Expenses(props) {\n\n  const [filteredYear, setFilteredYear] = useState('2020');\n\n  function filterChangeHandler(selectedYear) {\n    setFilteredYear(selectedYear);\n  }\n\n  const filteredExpenses = props.expenses.filter(expense=> {\n    return expense.date.getFullYear().toString() === filteredYear;\n  })\n\n  \n\n    return(\n      <div>\n        \n      \n    <Card className=\"expenses\">\n      <ExpenseFilter selected={filteredYear} onChangeFilter={filterChangeHandler}/>\n      <ExpensesChart expenses={filteredExpenses} />\n      <ExpenseList expenses={filteredExpenses} />\n\n    {/* <ExpenseItem\n        title={props.expenses[0].title}\n        amount={props.expenses[0].amount}\n        date={props.expenses[0].date}\n      ></ExpenseItem>\n      <ExpenseItem\n        title={props.expenses[1].title}\n        amount={props.expenses[1].amount}\n        date={props.expenses[1].date}\n      ></ExpenseItem>\n      <ExpenseItem\n        title={props.expenses[2].title}\n        amount={props.expenses[2].amount}\n        date={props.expenses[2].date}\n      ></ExpenseItem>\n      <ExpenseItem\n        title={props.expenses[3].title}\n        amount={props.expenses[3].amount}\n        date={props.expenses[3].date}\n      ></ExpenseItem> */}\n      </Card>\n      </div>\n    );\n}","import React, {useState} from \"react\";\nimport './ExpenseForm.css';\n\nexport default function ExpenseForm(props) {\n\n    // const [userInput, setUserInput] = useState({\n    //     enteredTitle: '',\n    //     enteredAmount: '',\n    //     enteredDate: '',\n    // });\n\n    // function titleChangeHandler (event) {\n    //     setUserInput(\n    //         {...userInput, enteredTitle:event.target.value}\n    //     );\n    // }\n\n    // function amountChangeHandler (event) {\n    //     setUserInput(\n    //         {...userInput, enteredAmount:event.target.value}\n    //     );\n    // }\n\n    // function dateChangeHandler (event) {\n    //     setUserInput(\n    //         {...userInput, enteredDate:event.target.value}\n    //     );\n    // }\n\n  const [enteredTitle, setEnteredTitle] = useState('');\n  const [enteredAmount, setEnteredAmount] = useState('');\n  const [enteredDate, setEnteredDate] = useState('');\n  // const [userInput, setUserInput] = useState({\n  //   enteredTitle: '',\n  //   enteredAmount: '',\n  //   enteredDate: '',\n  // });\n\n  const titleChangeHandler = (event) => {\n    setEnteredTitle(event.target.value);\n    // setUserInput({\n    //   ...userInput,\n    //   enteredTitle: event.target.value,\n    // });\n    // setUserInput((prevState) => {\n    //   return { ...prevState, enteredTitle: event.target.value };\n    // });\n  };\n\n  const amountChangeHandler = (event) => {\n    setEnteredAmount(event.target.value);\n    // setUserInput({\n    //   ...userInput,\n    //   enteredAmount: event.target.value,\n    // });\n  };\n\n  const dateChangeHandler = (event) => {\n    setEnteredDate(event.target.value);\n    // setUserInput({\n    //   ...userInput,\n    //   enteredDate: event.target.value,\n    // });\n  };\n\n  function submitHandler(event) {\n    event.preventDefault();\n\n    const expenseData = {\n        title: enteredTitle,\n        amount: +enteredAmount,\n        date: new Date(enteredDate),\n    }\n\n    // console.log(expenseData);\n    props.onSaveExpenseData(expenseData);\n    setEnteredTitle('');\n    setEnteredAmount('');\n    setEnteredDate('');\n  }\n\n\n\n    return (\n        <form onSubmit={submitHandler}>\n            <div className='new-expense__controls'>\n                <div className=\"new-expense__control\">\n                    <label>Title</label>\n                    <input type=\"text\" value={enteredTitle} onChange={titleChangeHandler}/>\n                </div>\n                <div className=\"new-expense__control\">\n                    <label>Amount</label>\n                    <input type=\"number\" min=\"0.1\" step=\"0.1\" value={enteredAmount} onChange={amountChangeHandler}/>\n                </div>\n                <div className=\"new-expense__control\">\n                    <label>Date</label>\n                    <input type=\"date\" min=\"2019-01-01\" max=\"2022-12-31\" value={enteredDate} onChange={dateChangeHandler}/>\n                </div>\n            </div>\n            <div className=\"new-expense__actions\">\n                <button type=\"button\" onClick={props.onCancel}>Cancel</button>\n                <button type=\"submit\">Add Expense</button>\n            </div>\n        </form>\n    );\n}","import React, { useState } from \"react\";\nimport './NewExpense.css';\nimport ExpenseForm from \"./ExpenseForm\";\n\nexport default function NewExpense(props) {\n\n    const [isEditing, setIsEditing] = useState(false);\n\n    function saveExpenseDataHandler (enteredExpenseData) {\n        const expenseData = {\n            ...enteredExpenseData,\n            id: Math.random.toString(),\n        };\n\n        props.onAddExpense(expenseData);\n        setIsEditing(false);\n    }\n\n    function startIsEditingHandler() {\n        setIsEditing(true);\n    }\n\n    function stopEditingHandler() {\n        setIsEditing(false);\n    }\n\n    return (\n        <div className = 'new-expense'>\n            {!isEditing && <button onClick={startIsEditingHandler}>Add New Expense</button>}\n            {isEditing && <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} onCancel={stopEditingHandler}/>}\n        </div>\n    );\n}","import React, {useState} from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\n\nconst DUMMY_EXPENSES = [\n  {\n    id: 'e1',\n    title: 'Toilet Paper',\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: 'e2', title: 'New TV', amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: 'e4',\n    title: 'New Desk (Wooden)',\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nfunction App() {\n\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  function addExpenseHandler(expense) {\n    setExpenses(prevExpenses => {\n      return [expense, ...prevExpenses];\n    });\n  } \n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler}/>\n      <Expenses expenses={expenses}/>\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}